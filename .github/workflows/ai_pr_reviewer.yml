name: 🤖 AI PR Reviewer

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: get_diff
        run: |
          diff_output=$(git diff origin/${{ github.base_ref }}...HEAD)
          echo "$diff_output" > pr_diff.txt
          echo "Diff length: ${#diff_output}"  # 로그로 확인용

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Call OpenAI API
        id: openai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ ! -s pr_diff.txt ]; then
            echo "❗ Diff가 비어 있어 OpenAI 호출을 건너뜁니다." > summary.txt
            exit 0
          fi

          PROMPT="You are a senior QA engineer. Analyze the following code diff and provide a concise review comment in Korean. Mention bugs, improvements, or risks if any."
          
          JSON_PAYLOAD=$(jq -n \
            --arg prompt "$PROMPT" \
            --arg diff "$(cat pr_diff.txt)" \
            '{
              "model": "gpt-4o",
              "messages": [
                {"role": "system", "content": $prompt},
                {"role": "user", "content": $diff}
              ]
            }')

          curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$JSON_PAYLOAD" > response.json

          echo "--- OpenAI API Raw Response ---"
          cat response.json
          echo "---------------------------------"

          MESSAGE=$(jq -r '.choices[0].message.content // "❗ OpenAI 응답을 받아오지 못했습니다."' response.json)
          echo "$MESSAGE" > summary.txt

      - name: Post AI Review as Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('summary.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });